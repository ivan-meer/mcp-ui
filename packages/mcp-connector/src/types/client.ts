/**
 * üìù MCP CLIENT TYPES
 * 
 * üìö –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–ê–Ø –ó–ê–ú–ï–¢–ö–ê:
 * –¢–∏–ø—ã –¥–ª—è MCP –∫–ª–∏–µ–Ω—Ç–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–µ type safety –∏ –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç.
 * –û—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ Model Context Protocol.
 * 
 * üîó –°—Å—ã–ª–∫–∞: https://modelcontextprotocol.io/specification
 */

import type { z } from 'zod';
import type { McpServer, McpTool, McpResource } from './server';
import type { Transport } from './transport';

// üìä CONNECTION STATUS
/**
 * üì∂ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è MCP –∫–ª–∏–µ–Ω—Ç–∞
 */
export type McpConnectionStatus = 
  | 'disconnected'   // ‚ö´ –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  | 'connecting'     // üü° –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è  
  | 'connected'      // üü¢ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω
  | 'reconnecting'   // üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  | 'error'          // üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  | 'closed';        // ‚≠ï –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ

// üéõÔ∏è CLIENT CONFIGURATION
/**
 * ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP –∫–ª–∏–µ–Ω—Ç–∞
 */
export interface McpClientConfig {
  /** üöÄ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
  transport: Transport;
  
  /** üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ */
  autoReconnect?: boolean;
  
  /** ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–º—Å) */
  connectionTimeout?: number;
  
  /** üîÅ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ */
  retryStrategy?: {
    maxAttempts: number;
    initialDelay: number;
    maxDelay: number;
    backoffFactor: number;
  };
  
  /** üíì Heartbeat –∏–Ω—Ç–µ—Ä–≤–∞–ª (–º—Å) */
  heartbeatInterval?: number;
  
  /** üìä –í–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ */
  enableLogging?: boolean;
  
  /** üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ö–µ–¥–µ—Ä—ã */
  headers?: Record<string, string>;
}

// üì® MCP MESSAGES
/**
 * üì¨ –ë–∞–∑–æ–≤—ã–π —Ç–∏–ø MCP —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export interface McpMessage {
  /** üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä */
  id?: string | number;
  
  /** üìù –í–µ—Ä—Å–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ */
  jsonrpc: '2.0';
  
  /** ‚è∞ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è */
  timestamp?: Date;
}

/**
 * üì§ MCP –∑–∞–ø—Ä–æ—Å
 */
export interface McpRequest extends McpMessage {
  /** üéØ –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–∑–æ–≤–∞ */
  method: string;
  
  /** üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ */
  params?: Record<string, unknown>;
}

/**
 * üì• MCP –æ—Ç–≤–µ—Ç
 */
export interface McpResponse extends McpMessage {
  /** ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç (–ø—Ä–∏ —É—Å–ø–µ—Ö–µ) */
  result?: unknown;
  
  /** ‚ùå –û—à–∏–±–∫–∞ (–ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ) */
  error?: McpError;
}

/**
 * üì° MCP —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–±–µ–∑ –æ—Ç–≤–µ—Ç–∞)
 */
export interface McpNotification extends Omit<McpMessage, 'id'> {
  /** üéØ –ú–µ—Ç–æ–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
  method: string;
  
  /** üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã */
  params?: Record<string, unknown>;
}

/**
 * ‚ùå MCP –æ—à–∏–±–∫–∞
 */
export interface McpError {
  /** üî¢ –ö–æ–¥ –æ—à–∏–±–∫–∏ */
  code: number;
  
  /** üìù –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */
  message: string;
  
  /** üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */
  data?: unknown;
}

// üéØ CLIENT EVENTS
/**
 * üì° –°–æ–±—ã—Ç–∏—è MCP –∫–ª–∏–µ–Ω—Ç–∞
 */
export interface McpClientEvents {
  /** üîó –°–æ–±—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
  connected: {
    server: McpServer;
    timestamp: Date;
  };
  
  /** üíî –°–æ–±—ã—Ç–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è */
  disconnected: {
    reason?: string;
    code?: number;
    timestamp: Date;
  };
  
  /** üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ */
  message: {
    message: McpMessage;
    timestamp: Date;
  };
  
  /** ‚ùå –û—à–∏–±–∫–∞ */
  error: {
    error: Error | McpError;
    context?: string;
    timestamp: Date;
  };
  
  /** üìä –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ */
  statusChange: {
    oldStatus: McpConnectionStatus;
    newStatus: McpConnectionStatus;
    timestamp: Date;
  };
  
  /** üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ */
  reconnecting: {
    attempt: number;
    maxAttempts: number;
    delay: number;
    timestamp: Date;
  };
  
  /** üõ†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */
  toolsUpdated: {
    tools: McpTool[];
    timestamp: Date;
  };
  
  /** üìÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ */
  resourcesUpdated: {
    resources: McpResource[];
    timestamp: Date;
  };
}

// üéØ CLIENT METHODS
/**
 * üîß –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å MCP –∫–ª–∏–µ–Ω—Ç–∞
 */
export interface IMcpClient {
  /** üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
  readonly status: McpConnectionStatus;
  
  /** üè∑Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ */
  readonly server: McpServer | null;
  
  /** üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã */
  readonly tools: McpTool[];
  
  /** üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã */
  readonly resources: McpResource[];
  
  /** üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É */
  connect(): Promise<void>;
  
  /** üíî –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ */
  disconnect(): Promise<void>;
  
  /** üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å */
  send<T = unknown>(request: McpRequest): Promise<T>;
  
  /** üì° –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */
  notify(notification: McpNotification): Promise<void>;
  
  /** üõ†Ô∏è –í—ã–∑–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç */
  callTool(name: string, arguments?: Record<string, unknown>): Promise<unknown>;
  
  /** üìÅ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Å—É—Ä—Å */
  getResource(uri: string): Promise<unknown>;
  
  /** üìù –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */
  listTools(): Promise<McpTool[]>;
  
  /** üìã –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ */
  listResources(): Promise<McpResource[]>;
  
  /** üëÇ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è */
  on<K extends keyof McpClientEvents>(
    event: K, 
    listener: (data: McpClientEvents[K]) => void
  ): void;
  
  /** üëÇ‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π */
  off<K extends keyof McpClientEvents>(
    event: K, 
    listener?: (data: McpClientEvents[K]) => void
  ): void;
  
  /** üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ */
  removeAllListeners(): void;
}

// üìä ADVANCED TYPES
/**
 * üéØ –û–ø—Ü–∏–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
 */
export interface CallToolOptions {
  /** ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç (–º—Å) */
  timeout?: number;
  
  /** üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ */
  retries?: number;
  
  /** üìä –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */
  context?: Record<string, unknown>;
}

/**
 * üìÅ –û–ø—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞
 */
export interface GetResourceOptions {
  /** ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç (–º—Å) */
  timeout?: number;
  
  /** üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */
  params?: Record<string, unknown>;
}

/**
 * üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
 */
export interface McpClientStats {
  /** üîó –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */
  connectedAt: Date | null;
  
  /** üì§ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π */
  messagesSent: number;
  
  /** üì• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π */
  messagesReceived: number;
  
  /** ‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ */
  errors: number;
  
  /** üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π */
  reconnections: number;
  
  /** ‚è±Ô∏è –°—Ä–µ–¥–Ω—è—è –∑–∞–¥–µ—Ä–∂–∫–∞ (–º—Å) */
  averageLatency: number;
}

// üéì –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –ó–ê–ú–ï–¢–ö–ò:

/**
 * üí° MCP PROTOCOL OVERVIEW:
 * 
 * Model Context Protocol (MCP) - —ç—Ç–æ JSON-RPC –ø—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
 * AI –º–æ–¥–µ–ª–µ–π —Å –≤–Ω–µ—à–Ω–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏.
 * 
 * üîÑ –û–°–ù–û–í–ù–´–ï –ö–û–ù–¶–ï–ü–¶–ò–ò:
 * - **Tools** - —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å AI
 * - **Resources** - –¥–∞–Ω–Ω—ã–µ, –∫ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø AI  
 * - **Prompts** - —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤
 * 
 * üì° –¢–†–ê–ù–°–ü–û–†–¢–´:
 * - **WebSocket** - –¥–ª—è real-time –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π —Å–≤—è–∑–∏
 * - **SSE** - –¥–ª—è server-sent events (–æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è)
 * - **HTTP** - –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö request/response –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
 */

/**
 * üö® COMMON PITFALLS & SOLUTIONS:
 * 
 * ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ó–∞–±—ã–≤–∞—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 * ‚úÖ –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º autoReconnect –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é retry —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
 * 
 * ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ë–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ event handlers
 * ‚úÖ –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º async/await –∏ non-blocking –æ–±—Ä–∞–±–æ—Ç–∫—É
 * 
 * ‚ùå –ü–†–û–ë–õ–ï–ú–ê: Memory leaks –æ—Ç –Ω–µ–æ—á–∏—â–µ–Ω–Ω—ã—Ö listeners
 * ‚úÖ –†–ï–®–ï–ù–ò–ï: –í—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ–º removeAllListeners() –ø—Ä–∏ unmount
 * 
 * ‚ùå –ü–†–û–ë–õ–ï–ú–ê: Race conditions –ø—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö
 * ‚úÖ –†–ï–®–ï–ù–ò–ï: Proper request ID handling –∏ Promise-based API
 */

export default McpClientEvents;