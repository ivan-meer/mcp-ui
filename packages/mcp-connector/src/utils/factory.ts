/**
 * üè≠ MCP CLIENT FACTORY
 * 
 * üìö –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–ê–Ø –ó–ê–ú–ï–¢–ö–ê:
 * –§–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è MCP –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞–º–∏.
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç type safety –∏ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.
 * 
 * üéØ DESIGN PATTERN: Factory Pattern
 * –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
 */

import { McpClient } from '../client/McpClient';
import { WebSocketTransport } from '../transports/WebSocketTransport';
import type {
  McpClientConfig,
  IMcpClient,
} from '../types/client';
import type {
  WebSocketConfig,
  SSEConfig,
  LocalConfig,
} from '../types/transport';
import {
  DEFAULT_CLIENT_CONFIG,
  DEFAULT_WEBSOCKET_CONFIG,
  DEFAULT_SSE_CONFIG,
} from '../constants';

// üè≠ MAIN FACTORY FUNCTION
/**
 * üîß –°–æ–∑–¥–∞—Ç—å MCP –∫–ª–∏–µ–Ω—Ç —Å –∑–∞–¥–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
 * 
 * üéØ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø:
 * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç —Å –ª—é–±—ã–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º
 */
export function createMcpClient(config: McpClientConfig): IMcpClient {
  return new McpClient(config);
}

// üì° WEBSOCKET FACTORY
/**
 * üåê –°–æ–∑–¥–∞—Ç—å MCP –∫–ª–∏–µ–Ω—Ç —Å WebSocket —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º
 * 
 * üöÄ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
 * ```typescript
 * const client = createWebSocketClient({
 *   url: 'ws://localhost:3000/mcp',
 *   autoReconnect: true,
 * });
 * ```
 */
export function createWebSocketClient(
  wsConfig: Partial<WebSocketConfig> & { url: string },
  clientConfig?: Partial<Omit<McpClientConfig, 'transport'>>
): IMcpClient {
  // üîß –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const transport = new WebSocketTransport({
    ...DEFAULT_WEBSOCKET_CONFIG,
    ...wsConfig,
  });
  
  const fullConfig: McpClientConfig = {
    ...DEFAULT_CLIENT_CONFIG,
    ...clientConfig,
    transport,
  };
  
  return new McpClient(fullConfig);
}

// üåä SSE FACTORY (–∫–æ–≥–¥–∞ —Ä–µ–∞–ª–∏–∑—É–µ–º)
/**
 * üì° –°–æ–∑–¥–∞—Ç—å MCP –∫–ª–∏–µ–Ω—Ç —Å SSE —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º
 * 
 * üìù TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å SSETransport
 */
export function createSSEClient(
  sseConfig: Partial<SSEConfig> & { url: string },
  clientConfig?: Partial<Omit<McpClientConfig, 'transport'>>
): IMcpClient {
  // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å SSETransport
  throw new Error('SSE transport not implemented yet');
}

// üè† LOCAL FACTORY (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
/**
 * üñ•Ô∏è –°–æ–∑–¥–∞—Ç—å MCP –∫–ª–∏–µ–Ω—Ç —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º (–¥–ª—è —Ç–µ—Å—Ç–æ–≤)
 * 
 * üìù TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å LocalTransport
 */
export function createLocalClient(
  localConfig: Partial<LocalConfig> & { serverName: string },
  clientConfig?: Partial<Omit<McpClientConfig, 'transport'>>
): IMcpClient {
  // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å LocalTransport
  throw new Error('Local transport not implemented yet');
}

// üéõÔ∏è PRESET CONFIGURATIONS
/**
 * üìã –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
 */

/**
 * üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */
export function createDevelopmentClient(url: string): IMcpClient {
  return createWebSocketClient({
    url,
    autoReconnect: true,
    pingInterval: 10000, // üîÑ –ß–∞—Å—Ç—ã–π ping –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä—ã–≤–æ–≤
  }, {
    enableLogging: true,
    retryStrategy: {
      maxAttempts: 10,
      initialDelay: 500,
      maxDelay: 5000,
      backoffFactor: 1.5,
    },
  });
}

/**
 * üè≠ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è production —Å—Ä–µ–¥—ã
 */
export function createProductionClient(url: string): IMcpClient {
  return createWebSocketClient({
    url,
    autoReconnect: true,
    pingInterval: 30000,
    pongTimeout: 10000,
  }, {
    enableLogging: false,
    retryStrategy: {
      maxAttempts: 5,
      initialDelay: 2000,
      maxDelay: 30000,
      backoffFactor: 2,
    },
    heartbeatInterval: 60000,
  });
}

/**
 * üß™ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export function createTestClient(url: string): IMcpClient {
  return createWebSocketClient({
    url,
    autoReconnect: false, // üö´ –ù–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ç–µ—Å—Ç–∞—Ö
    pingInterval: undefined, // üö´ –û—Ç–∫–ª—é—á–∞–µ–º ping –≤ —Ç–µ—Å—Ç–∞—Ö
  }, {
    enableLogging: false,
    connectionTimeout: 5000, // ‚è±Ô∏è –ë—ã—Å—Ç—Ä—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
  });
}

/**
 * üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è secure –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
export function createSecureClient(
  url: string, 
  authToken: string
): IMcpClient {
  return createWebSocketClient({
    url,
    headers: {
      'Authorization': `Bearer ${authToken}`,
    },
    autoReconnect: true,
    // üõ°Ô∏è SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–≥–¥–∞ —Ä–µ–∞–ª–∏–∑—É–µ–º
  }, {
    enableLogging: false,
  });
}

// üéØ SPECIALIZED FACTORIES
/**
 * üé® –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–±—Ä–∏–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö use cases
 */

/**
 * üí¨ –°–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç –¥–ª—è —á–∞—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export function createChatClient(url: string): IMcpClient {
  return createWebSocketClient({
    url,
    autoReconnect: true,
    pingInterval: 15000, // üíì –ß–∞—Å—Ç—ã–π heartbeat –¥–ª—è real-time —á–∞—Ç–∞
    maxMessageSize: 50 * 1024, // üìù –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
  }, {
    enableLogging: true,
    retryStrategy: {
      maxAttempts: 3,
      initialDelay: 1000,
      maxDelay: 10000,
      backoffFactor: 2,
    },
  });
}

/**
 * üìä –°–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏/monitoring
 */
export function createAnalyticsClient(url: string): IMcpClient {
  return createWebSocketClient({
    url,
    autoReconnect: true,
    pingInterval: 60000, // üíì –†–µ–¥–∫–∏–π heartbeat –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  }, {
    enableLogging: false,
    retryStrategy: {
      maxAttempts: 10, // üîÑ –ú–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      initialDelay: 5000,
      maxDelay: 60000,
      backoffFactor: 1.5,
    },
  });
}

/**
 * üèÉ –°–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 */
export function createEphemeralClient(url: string): IMcpClient {
  return createWebSocketClient({
    url,
    autoReconnect: false, // üö´ –ù–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
    pingInterval: undefined, // üö´ –ù–µ –Ω—É–∂–µ–Ω heartbeat
  }, {
    connectionTimeout: 10000,
    enableLogging: false,
  });
}

// üîß CONFIGURATION HELPERS
/**
 * üõ†Ô∏è –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */

/**
 * üåê –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø URL –∏ —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–ª–∏–µ–Ω—Ç
 */
export function createClientFromUrl(
  url: string,
  options?: {
    type?: 'websocket' | 'sse' | 'auto';
    config?: Partial<McpClientConfig>;
  }
): IMcpClient {
  const type = options?.type || 'auto';
  
  if (type === 'auto') {
    // üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ URL
    if (url.startsWith('ws://') || url.startsWith('wss://')) {
      return createWebSocketClient({ url }, options?.config);
    } else if (url.startsWith('http://') || url.startsWith('https://')) {
      // TODO: –°–æ–∑–¥–∞—Ç—å SSE –∫–ª–∏–µ–Ω—Ç –∫–æ–≥–¥–∞ —Ä–µ–∞–ª–∏–∑—É–µ–º
      throw new Error('SSE client not implemented yet');
    } else {
      throw new Error(`Unsupported URL scheme: ${url}`);
    }
  }
  
  switch (type) {
    case 'websocket':
      return createWebSocketClient({ url }, options?.config);
    case 'sse':
      throw new Error('SSE client not implemented yet');
    default:
      throw new Error(`Unknown client type: ${type}`);
  }
}

/**
 * üìã –°–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç –∏–∑ JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export function createClientFromConfig(
  configJson: string | object
): IMcpClient {
  const config = typeof configJson === 'string' 
    ? JSON.parse(configJson) 
    : configJson;
  
  // üìù TODO: –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  // üìù TODO: –°–æ–∑–¥–∞—Ç—å Transport –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  
  throw new Error('createClientFromConfig not implemented yet');
}

// üéì –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –ó–ê–ú–ï–¢–ö–ò:

/**
 * üí° FACTORY PATTERN BENEFITS:
 * 
 * ‚úÖ **–£–ø—Ä–æ—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤**:
 * - –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 * - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π API –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
 * - –°–∫—Ä—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * 
 * ‚úÖ **Type Safety**:
 * - Compile-time –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
 * - –ê–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç –≤ IDE
 * - –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * 
 * ‚úÖ **–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ**:
 * - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö environment
 * - Consistent –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ across –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * - Easy testing —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –º–æ–∫–∞–º–∏
 */

/**
 * üéØ USAGE PATTERNS:
 * 
 * üìã **Simple Usage**:
 * ```typescript
 * const client = createWebSocketClient({ url: 'ws://localhost:3000' });
 * ```
 * 
 * üéõÔ∏è **Advanced Configuration**:
 * ```typescript
 * const client = createWebSocketClient({
 *   url: 'wss://api.example.com/mcp',
 *   headers: { 'Authorization': 'Bearer token' }
 * }, {
 *   retryStrategy: RETRY_STRATEGIES.aggressive
 * });
 * ```
 * 
 * üöÄ **Environment-specific**:
 * ```typescript
 * const client = process.env.NODE_ENV === 'production'
 *   ? createProductionClient(url)
 *   : createDevelopmentClient(url);
 * ```
 */

/**
 * üîÑ EXTENSION PATTERNS:
 * 
 * üè≠ **Custom Factories**:
 * –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–±—Ä–∏–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤:
 * 
 * ```typescript
 * export function createGameClient(url: string) {
 *   return createWebSocketClient({
 *     url,
 *     pingInterval: 1000, // –í—ã—Å–æ–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ –¥–ª—è –∏–≥—Ä
 *   }, {
 *     retryStrategy: RETRY_STRATEGIES.aggressive
 *   });
 * }
 * ```
 * 
 * üé® **Plugin System**:
 * –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å plugin –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É:
 * 
 * ```typescript
 * const client = createWebSocketClient(config)
 *   .use(loggingPlugin)
 *   .use(metricsPlugin)
 *   .use(authPlugin);
 * ```
 */

export default {
  createMcpClient,
  createWebSocketClient,
  createSSEClient,
  createLocalClient,
  createDevelopmentClient,
  createProductionClient,
  createTestClient,
  createSecureClient,
  createChatClient,
  createAnalyticsClient,
  createEphemeralClient,
  createClientFromUrl,
  createClientFromConfig,
};