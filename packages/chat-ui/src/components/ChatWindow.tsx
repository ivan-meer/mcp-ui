/**
 * üí¨ CHAT WINDOW COMPONENT
 * 
 * üìö –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–ê–Ø –ó–ê–ú–ï–¢–ö–ê:
 * –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –û–±—ä–µ–¥–∏–Ω—è–µ—Ç MessageList –∏ MessageInput,
 * —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å MCP —Å–µ—Ä–≤–µ—Ä–∞–º–∏.
 * 
 * üéØ –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ï –†–ï–®–ï–ù–ò–Ø:
 * 1. Compound Component Pattern - MessageList –∏ MessageInput –∫–∞–∫ –¥–µ—Ç–∏
 * 2. Controlled Component - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª–µ–º
 * 3. Event-driven Communication - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç callbacks –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * 4. Responsive Design - –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞
 */

import React, { useCallback, useRef, useEffect } from 'react'; // Removed useState
import { clsx } from 'clsx';
import { 
  Message,
  // MessageType, // No longer needed directly here
  // MessageStatus, // No longer needed directly here
  ChatWindowConfig, 
  // ChatEvent, // No longer needed directly here
  ChatEventData,
  // CreateMessageInput, // No longer needed directly here
  DEFAULT_CHAT_CONFIG,
  CHAT_TIMEOUTS 
} from '../types';
import { MessageList } from './MessageList';
import { MessageInput } from './MessageInput';

// üì¶ –ü–†–û–ü–°–´ –ö–û–ú–ü–û–ù–ï–ù–¢–ê
interface ChatWindowProps {
  /** üí¨ –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */
  messages: Message[];
  
  /** ‚ö° Callback –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è */
  onSendMessage: (content: string) => void;
  
  /** üéØ Callback –¥–ª—è —Å–æ–±—ã—Ç–∏–π —á–∞—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */
  onChatEvent?: (event: ChatEventData) => void;
  
  /** üéõÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–∞—Ç –æ–∫–Ω–∞ */
  config?: Partial<ChatWindowConfig>;
  
  /** üì∂ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É */
  connectionStatus?: 'connected' | 'disconnected' | 'connecting' | 'error';
  
  /** üè∑Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä */
  activeServer?: {
    id: string;
    name: string;
    status: 'online' | 'offline' | 'error';
  };
  
  /** ‚å®Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ */
  isTyping?: boolean;
  
  /** üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
  isLoading?: boolean;
  
  /** üìè –ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã */
  className?: string;
  
  /** üé≠ –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ */
  style?: React.CSSProperties;
}

/**
 * üí¨ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç –æ–∫–Ω–∞
 * 
 * üéØ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:
 * - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (—á–µ—Ä–µ–∑ MessageList)
 * - –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—á–µ—Ä–µ–∑ MessageInput)
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º (–≤ MessageList)
 * - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è (–ø–µ—á–∞—Ç—å, –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)
 * - Responsive –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
export const ChatWindow: React.FC<ChatWindowProps> = ({
  messages,
  onSendMessage,
  onChatEvent,
  config = {},
  connectionStatus = 'disconnected',
  activeServer,
  isTyping = false,
  isLoading = false,
  className,
  style,
}) => {
  // üéõÔ∏è –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π
  const mergedConfig = { ...DEFAULT_CHAT_CONFIG, ...config };
  
  // üìù –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ - inputValue –∏ isInputFocused —Ç–µ–ø–µ—Ä—å –≤ MessageInput
  // üìç Refs –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –∏ —Ñ–æ–∫—É—Å–æ–º - messagesEndRef –≤ MessageList, inputRef –≤ MessageInput
  const chatContainerRef = useRef<HTMLDivElement>(null); // This might still be useful for overall container
  
  // üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º - —Ç–µ–ø–µ—Ä—å –≤ MessageList
  // ‚ö° –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è - onSendMessage prop –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ MessageInput
  // ‚å®Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π - —Ç–µ–ø–µ—Ä—å –≤ MessageInput

  // üé® –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ CSS –∫–ª–∞—Å—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const chatWindowClasses = clsx(
    // üèóÔ∏è –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    'flex flex-col h-full bg-bg-primary border border-border-primary rounded-lg', // Base container styles
    'shadow-lg overflow-hidden transition-all duration-300',
    'dark:bg-bg-primary dark:border-border-primary', // Dark theme styles
    {
      'max-w-sm mx-auto': mergedConfig.compactMode, // Compact mode for mobile
      'min-h-[400px]': !mergedConfig.compactMode,   // Min height for desktop
    },
    { // Connection status styles
      'ring-2 ring-accent-success ring-opacity-50': connectionStatus === 'connected',
      'ring-2 ring-accent-error ring-opacity-50': connectionStatus === 'error',
      'ring-2 ring-accent-warning ring-opacity-50': connectionStatus === 'connecting',
    },
    className // Custom classes
  );

  return (
    <div 
      ref={chatContainerRef}
      className={chatWindowClasses}
      style={{ ...style, maxHeight: mergedConfig.maxHeight }}
      role="main"
      aria-label="–ß–∞—Ç —Å MCP —Å–µ—Ä–≤–µ—Ä–æ–º"
    >
      {/* üìä HEADER - –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ */}
      {/* This header section is preserved as per requirements */}
      {(activeServer || connectionStatus !== 'connected') && (
        <div className="bg-bg-secondary border-b border-border-primary px-4 py-3">
          <div className="flex items-center justify-between">
            {activeServer && (
              <div className="flex items-center space-x-3">
                <div className={clsx(
                  'w-2 h-2 rounded-full',
                  {
                    'bg-accent-success': activeServer.status === 'online',
                    'bg-accent-error': activeServer.status === 'error',
                    'bg-accent-warning': activeServer.status === 'offline',
                  }
                )} />
                <span className="text-text-primary font-medium">
                  {activeServer.name}
                </span>
              </div>
            )}
            <div className="flex items-center space-x-2">
              {connectionStatus === 'connecting' && (
                <div className="animate-spin w-4 h-4 border-2 border-accent-primary border-t-transparent rounded-full" />
              )}
              <span className={clsx(
                'text-sm',
                {
                  'text-accent-success': connectionStatus === 'connected',
                  'text-accent-error': connectionStatus === 'error',
                  'text-accent-warning': connectionStatus === 'connecting',
                  'text-text-muted': connectionStatus === 'disconnected',
                }
              )}>
                {connectionStatus === 'connected' && 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω'}
                {connectionStatus === 'connecting' && 'üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...'}
                {connectionStatus === 'error' && 'üî¥ –û—à–∏–±–∫–∞'}
                {connectionStatus === 'disconnected' && '‚ö´ –û—Ç–∫–ª—é—á–µ–Ω'}
              </span>
            </div>
          </div>
        </div>
      )}
      
      {/* üí¨ Message List Area */}
      <MessageList
        messages={messages}
        config={mergedConfig?.messageListConfig || mergedConfig} // Pass sub-config or whole config
        isTyping={isTyping}
        className="flex-grow p-4 min-h-0" // Ensure it fills space and scrolls
        onMessageEvent={onChatEvent} // Pass onChatEvent for bubble actions
      />

      {/* ‚å®Ô∏è Message Input Area */}
      <MessageInput
        onSendMessage={onSendMessage} // Prop from ChatWindow
        config={mergedConfig?.messageInputConfig || mergedConfig} // Pass sub-config or whole config
        isLoading={isLoading}
        isConnected={connectionStatus === 'connected'}
        placeholder={mergedConfig?.placeholder || "Type a message..."}
        className="p-2 border-t border-gray-200"
        // availableTools={availableTools} // Pass if availableTools prop exists and is used by MessageInput
      />
    </div>
  );
};

// MessageBubble and MessageStatusIndicator are removed from here.
// They are expected to be part of MessageList.tsx or its children.

// üéØ –≠–ö–°–ü–û–†–¢–´
export default ChatWindow;

// üìö –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –≠–ö–°–ü–û–†–¢–´
export type { ChatWindowProps }; // MessageBubbleProps removed

// üîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò: (These TODOs might now belong to MessageList or MessageInput)
// INFO: Removed TODO for drag & drop for files, as this is handled by the child MessageInput component.
// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å) (MessageList/MessageBubble)
// TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É markdown —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö (MessageList/MessageBubble)
// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π (MessageList)
// INFO: Debouncing for auto-scroll has been implemented in MessageList.
// HACK: –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∏–∫–æ–Ω–∫–∏, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ Lucide React (General UI concern)