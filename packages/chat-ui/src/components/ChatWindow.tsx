/**
 * üí¨ CHAT WINDOW COMPONENT
 * 
 * üìö –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–ê–Ø –ó–ê–ú–ï–¢–ö–ê:
 * –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –û–±—ä–µ–¥–∏–Ω—è–µ—Ç MessageList –∏ MessageInput,
 * —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å MCP —Å–µ—Ä–≤–µ—Ä–∞–º–∏.
 * 
 * üéØ –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ï –†–ï–®–ï–ù–ò–Ø:
 * 1. Compound Component Pattern - MessageList –∏ MessageInput –∫–∞–∫ –¥–µ—Ç–∏
 * 2. Controlled Component - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª–µ–º
 * 3. Event-driven Communication - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç callbacks –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * 4. Responsive Design - –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞
 */

import React, { useState, useCallback, useRef, useEffect } from 'react';
import { clsx } from 'clsx';
import { 
  Message, 
  MessageType, 
  MessageStatus,
  ChatWindowConfig, 
  ChatEvent,
  ChatEventData,
  CreateMessageInput,
  DEFAULT_CHAT_CONFIG,
  CHAT_TIMEOUTS 
} from '../types';

// üì¶ –ü–†–û–ü–°–´ –ö–û–ú–ü–û–ù–ï–ù–¢–ê
interface ChatWindowProps {
  /** üí¨ –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */
  messages: Message[];
  
  /** ‚ö° Callback –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è */
  onSendMessage: (content: string) => void;
  
  /** üéØ Callback –¥–ª—è —Å–æ–±—ã—Ç–∏–π —á–∞—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */
  onChatEvent?: (event: ChatEventData) => void;
  
  /** üéõÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–∞—Ç –æ–∫–Ω–∞ */
  config?: Partial<ChatWindowConfig>;
  
  /** üì∂ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É */
  connectionStatus?: 'connected' | 'disconnected' | 'connecting' | 'error';
  
  /** üè∑Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä */
  activeServer?: {
    id: string;
    name: string;
    status: 'online' | 'offline' | 'error';
  };
  
  /** ‚å®Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ */
  isTyping?: boolean;
  
  /** üîÑ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
  isLoading?: boolean;
  
  /** üìè –ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã */
  className?: string;
  
  /** üé≠ –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ */
  style?: React.CSSProperties;
}

/**
 * üí¨ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç –æ–∫–Ω–∞
 * 
 * üéØ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:
 * - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
 * - –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
 * - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è (–ø–µ—á–∞—Ç—å, –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)
 * - Responsive –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */
export const ChatWindow: React.FC<ChatWindowProps> = ({
  messages,
  onSendMessage,
  onChatEvent,
  config = {},
  connectionStatus = 'disconnected',
  activeServer,
  isTyping = false,
  isLoading = false,
  className,
  style,
}) => {
  // üéõÔ∏è –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π
  const mergedConfig = { ...DEFAULT_CHAT_CONFIG, ...config };
  
  // üìù –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [inputValue, setInputValue] = useState('');
  const [isInputFocused, setIsInputFocused] = useState(false);
  
  // üìç Refs –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –∏ —Ñ–æ–∫—É—Å–æ–º
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const inputRef = useRef<HTMLTextAreaElement>(null);
  const chatContainerRef = useRef<HTMLDivElement>(null);
  
  // üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
  const scrollToBottom = useCallback(() => {
    if (mergedConfig.autoScroll && messagesEndRef.current) {
      // ‚ö° –ò—Å–ø–æ–ª—å–∑—É–µ–º requestAnimationFrame –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
      requestAnimationFrame(() => {
        messagesEndRef.current?.scrollIntoView({ 
          behavior: 'smooth',
          block: 'end'
        });
      });
    }
  }, [mergedConfig.autoScroll]);
  
  // üìä –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø—Ä–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
  useEffect(() => {
    // ‚è±Ô∏è –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DOM
    const timeoutId = setTimeout(scrollToBottom, CHAT_TIMEOUTS.AUTO_SCROLL_DELAY);
    return () => clearTimeout(timeoutId);
  }, [messages.length, scrollToBottom]);
  
  // ‚ö° –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  const handleSendMessage = useCallback((content: string) => {
    if (!content.trim()) return;
    
    // üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É
    onSendMessage(content.trim());
    
    // üìä –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ —á–∞—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫)
    if (onChatEvent) {
      const eventData: ChatEventData = {
        type: 'message-send',
        payload: { content: content.trim() },
        timestamp: new Date(),
        sourceId: 'chat-window',
      };
      onChatEvent(eventData);
    }
    
    // üßπ –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    setInputValue('');
    
    // üéØ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    if (inputRef.current) {
      inputRef.current.focus();
    }
  }, [onSendMessage, onChatEvent]);
  
  // ‚å®Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
  const handleKeyDown = useCallback((event: React.KeyboardEvent<HTMLTextAreaElement>) => {
    // ‚Ü©Ô∏è Enter –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–µ—Å–ª–∏ –Ω–µ –∑–∞–∂–∞—Ç Shift)
    if (event.key === 'Enter' && !event.shiftKey && mergedConfig.submitOnEnter) {
      event.preventDefault();
      handleSendMessage(inputValue);
    }
  }, [handleSendMessage, inputValue, mergedConfig.submitOnEnter]);
  
  // üé® –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ CSS –∫–ª–∞—Å—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const chatWindowClasses = clsx(
    // üèóÔ∏è –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    'flex flex-col h-full bg-bg-primary border border-border-primary rounded-lg',
    'shadow-lg overflow-hidden transition-all duration-300',
    
    // üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ —Å—Ç–∏–ª–∏
    'dark:bg-bg-primary dark:border-border-primary',
    
    // üì± Responsive –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    {
      'max-w-sm mx-auto': mergedConfig.compactMode, // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
      'min-h-[400px]': !mergedConfig.compactMode,   // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞
    },
    
    // üì∂ –°—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    {
      'ring-2 ring-accent-success ring-opacity-50': connectionStatus === 'connected',
      'ring-2 ring-accent-error ring-opacity-50': connectionStatus === 'error',
      'ring-2 ring-accent-warning ring-opacity-50': connectionStatus === 'connecting',
    },
    
    // üé≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–ª–∞—Å—Å—ã
    className
  );
  
  // üé® –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
  const messagesContainerClasses = clsx(
    'flex-1 overflow-y-auto p-4 space-y-3',
    'custom-scrollbar', // –ö–∞—Å—Ç–æ–º–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∏–∑ globals.css
    {
      'space-y-2': mergedConfig.compactMode, // –ú–µ–Ω—å—à–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ
    }
  );
  
  // üé® –°—Ç–∏–ª–∏ –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞
  const inputContainerClasses = clsx(
    'border-t border-border-primary bg-bg-secondary p-4',
    'transition-all duration-200',
    {
      'bg-bg-elevated': isInputFocused, // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
    }
  );
  
  return (
    <div 
      ref={chatContainerRef}
      className={chatWindowClasses}
      style={{ ...style, maxHeight: mergedConfig.maxHeight }}
      role="main"
      aria-label="–ß–∞—Ç —Å MCP —Å–µ—Ä–≤–µ—Ä–æ–º"
    >
      {/* üìä HEADER - –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ */}
      {(activeServer || connectionStatus !== 'connected') && (
        <div className="bg-bg-secondary border-b border-border-primary px-4 py-3">
          <div className="flex items-center justify-between">
            {/* üè∑Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ */}
            {activeServer && (
              <div className="flex items-center space-x-3">
                {/* üì° –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ */}
                <div className={clsx(
                  'w-2 h-2 rounded-full',
                  {
                    'bg-accent-success': activeServer.status === 'online',
                    'bg-accent-error': activeServer.status === 'error',
                    'bg-accent-warning': activeServer.status === 'offline',
                  }
                )} />
                <span className="text-text-primary font-medium">
                  {activeServer.name}
                </span>
              </div>
            )}
            
            {/* üì∂ –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
            <div className="flex items-center space-x-2">
              {connectionStatus === 'connecting' && (
                <div className="animate-spin w-4 h-4 border-2 border-accent-primary border-t-transparent rounded-full" />
              )}
              <span className={clsx(
                'text-sm',
                {
                  'text-accent-success': connectionStatus === 'connected',
                  'text-accent-error': connectionStatus === 'error',
                  'text-accent-warning': connectionStatus === 'connecting',
                  'text-text-muted': connectionStatus === 'disconnected',
                }
              )}>
                {connectionStatus === 'connected' && 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω'}
                {connectionStatus === 'connecting' && 'üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...'}
                {connectionStatus === 'error' && 'üî¥ –û—à–∏–±–∫–∞'}
                {connectionStatus === 'disconnected' && '‚ö´ –û—Ç–∫–ª—é—á–µ–Ω'}
              </span>
            </div>
          </div>
        </div>
      )}
      
      {/* üí¨ MESSAGES CONTAINER */}
      <div className={messagesContainerClasses}>
        {/* üìù –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π */}
        {messages.length === 0 ? (
          // üåü Empty state - –∫–æ–≥–¥–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
          <div className="flex flex-col items-center justify-center h-full text-center py-8">
            <div className="text-6xl mb-4">üí¨</div>
            <h3 className="text-text-primary text-lg font-medium mb-2">
              –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ
            </h3>
            <p className="text-text-muted max-w-md">
              –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å MCP —Å–µ—Ä–≤–µ—Ä–æ–º
            </p>
          </div>
        ) : (
          // üìä –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
          messages.map((message) => (
            <MessageBubble
              key={message.id}
              message={message}
              config={mergedConfig}
              onMessageEvent={onChatEvent}
            />
          ))
        )}
        
        {/* ‚å®Ô∏è –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏ */}
        {isTyping && (
          <div className="flex items-center space-x-2 text-text-muted">
            <div className="flex space-x-1">
              <div className="w-2 h-2 bg-text-muted rounded-full animate-bounce" style={{ animationDelay: '0ms' }} />
              <div className="w-2 h-2 bg-text-muted rounded-full animate-bounce" style={{ animationDelay: '150ms' }} />
              <div className="w-2 h-2 bg-text-muted rounded-full animate-bounce" style={{ animationDelay: '300ms' }} />
            </div>
            <span className="text-sm">–ü–µ—á–∞—Ç–∞–µ—Ç...</span>
          </div>
        )}
        
        {/* üìç –ú–∞—Ä–∫–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */}
        <div ref={messagesEndRef} />
      </div>
      
      {/* ‚å®Ô∏è INPUT CONTAINER */}
      <div className={inputContainerClasses}>
        <div className="flex items-end space-x-3">
          {/* üìù –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */}
          <div className="flex-1 relative">
            <textarea
              ref={inputRef}
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyDown={handleKeyDown}
              onFocus={() => setIsInputFocused(true)}
              onBlur={() => setIsInputFocused(false)}
              placeholder={mergedConfig.placeholder || '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...'}
              className={clsx(
                'w-full resize-none bg-bg-tertiary border border-border-muted rounded-lg',
                'px-4 py-3 text-text-primary placeholder-text-muted',
                'focus:border-border-focus focus:bg-bg-secondary focus:outline-none',
                'transition-all duration-200 max-h-32',
                {
                  'text-sm': mergedConfig.fontSize === 'small',
                  'text-base': mergedConfig.fontSize === 'medium',
                  'text-lg': mergedConfig.fontSize === 'large',
                }
              )}
              rows={1}
              style={{
                minHeight: '44px', // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è touch targets
                scrollbarWidth: 'thin',
              }}
              disabled={isLoading || connectionStatus !== 'connected'}
              maxLength={4000} // –õ–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤
              aria-label="–ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"
            />
            
            {/* üìä –°—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –ª–∏–º–∏—Ç—É) */}
            {inputValue.length > 3500 && (
              <div className={clsx(
                'absolute bottom-1 right-2 text-xs',
                {
                  'text-text-muted': inputValue.length < 3800,
                  'text-accent-warning': inputValue.length >= 3800 && inputValue.length < 3950,
                  'text-accent-error': inputValue.length >= 3950,
                }
              )}>
                {inputValue.length}/4000
              </div>
            )}
          </div>
          
          {/* üì§ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <button
            onClick={() => handleSendMessage(inputValue)}
            disabled={!inputValue.trim() || isLoading || connectionStatus !== 'connected'}
            className={clsx(
              'bg-accent-primary hover:bg-blue-600 disabled:bg-bg-hover',
              'text-white disabled:text-text-muted rounded-lg px-4 py-3',
              'transition-all duration-200 flex items-center justify-center',
              'min-w-[44px] h-[44px]', // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è touch targets
              'focus:outline-none focus:ring-2 focus:ring-accent-primary focus:ring-opacity-50'
            )}
            aria-label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
          >
            {isLoading ? (
              // üîÑ –°–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
              <div className="animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full" />
            ) : (
              // ‚û§ –ò–∫–æ–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
              <svg 
                className="w-5 h-5" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
                aria-hidden="true"
              >
                <path 
                  strokeLinecap="round" 
                  strokeLinejoin="round" 
                  strokeWidth={2} 
                  d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" 
                />
              </svg>
            )}
          </button>
        </div>
        
        {/* üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é */}
        {mergedConfig.submitOnEnter && (
          <div className="mt-2 text-xs text-text-muted">
            <kbd className="px-1 bg-bg-hover rounded text-xs">Enter</kbd> –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏, 
            <kbd className="px-1 bg-bg-hover rounded text-xs ml-1">Shift+Enter</kbd> –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
          </div>
        )}
      </div>
    </div>
  );
};

/**
 * üí≠ MESSAGE BUBBLE COMPONENT
 * 
 * üìö –û—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 * –í—ã–Ω–µ—Å–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
 */
interface MessageBubbleProps {
  message: Message;
  config: ChatWindowConfig;
  onMessageEvent?: (event: ChatEventData) => void;
}

const MessageBubble: React.FC<MessageBubbleProps> = ({ 
  message, 
  config, 
  onMessageEvent 
}) => {
  // üé® –°—Ç–∏–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const bubbleClasses = clsx(
    'max-w-[80%] rounded-lg px-4 py-3 relative group',
    'animate-fade-in', // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∏–∑ globals.css
    {
      // üë§ –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–ø—Ä–∞–≤–∞, —Å–∏–Ω–∏–µ)
      'bg-chat-user text-white ml-auto message-user': message.type === 'user',
      
      // ü§ñ –°–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ (—Å–ª–µ–≤–∞, —Å–µ—Ä—ã–µ)
      'bg-bg-secondary text-text-primary mr-auto message-assistant': message.type === 'assistant',
      
      // ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–ø–æ —Ü–µ–Ω—Ç—Ä—É, –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–µ)
      'bg-bg-tertiary text-text-secondary mx-auto message-system text-center': message.type === 'system',
      
      // üé® UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–ø–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞)
      'bg-bg-elevated border border-border-primary max-w-full': message.type === 'ui-component',
      
      // ‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
      'bg-accent-error text-white mr-auto': message.type === 'error',
    }
  );
  
  // ‚è∞ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  const formatTime = (date: Date) => {
    return new Intl.DateTimeFormat('ru-RU', {
      hour: '2-digit',
      minute: '2-digit',
    }).format(date);
  };
  
  return (
    <div className="flex flex-col space-y-1">
      {/* üí¨ –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
      <div className={bubbleClasses}>
        {/* üè∑Ô∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å–µ—Ä–≤–µ—Ä + —Å—Ç–∞—Ç—É—Å) */}
        {(message.serverName || message.status !== 'completed') && (
          <div className="flex items-center justify-between mb-2 text-xs opacity-75">
            {message.serverName && (
              <span className="font-medium">{message.serverName}</span>
            )}
            {message.status !== 'completed' && (
              <MessageStatusIndicator status={message.status} />
            )}
          </div>
        )}
        
        {/* üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è */}
        <div className="whitespace-pre-wrap">
          {typeof message.content === 'string' ? (
            // üìù –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            <span className="break-words">{message.content}</span>
          ) : (
            // üé® UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∑–∂–µ)
            <div className="text-accent-info">
              üé® UI Component: {message.content.uri}
              {/* TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç UIRenderer –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
            </div>
          )}
        </div>
        
        {/* ‚ùå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ */}
        {message.error && (
          <div className="mt-2 p-2 bg-accent-error bg-opacity-20 rounded text-accent-error text-xs">
            <div className="font-medium">–û—à–∏–±–∫–∞: {message.error.message}</div>
            {message.error.code && (
              <div className="opacity-75">–ö–æ–¥: {message.error.code}</div>
            )}
          </div>
        )}
      </div>
      
      {/* ‚è∞ –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ */}
      {config.showTimestamps && (
        <div className={clsx(
          'text-xs text-text-muted px-1',
          {
            'text-right': message.type === 'user',
            'text-left': message.type === 'assistant' || message.type === 'error',
            'text-center': message.type === 'system',
          }
        )}>
          {formatTime(message.timestamp)}
          {message.metadata?.executionTime && (
            <span className="ml-2 opacity-75">
              ({message.metadata.executionTime}ms)
            </span>
          )}
        </div>
      )}
    </div>
  );
};

/**
 * üìä MESSAGE STATUS INDICATOR
 * 
 * üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
interface MessageStatusIndicatorProps {
  status: MessageStatus;
}

const MessageStatusIndicator: React.FC<MessageStatusIndicatorProps> = ({ status }) => {
  const statusConfig = {
    sending: { icon: '‚è≥', text: '–û—Ç–ø—Ä–∞–≤–∫–∞...', color: 'text-accent-warning' },
    sent: { icon: '‚úì', text: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', color: 'text-accent-success' },
    delivered: { icon: '‚úì‚úì', text: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', color: 'text-accent-success' },
    failed: { icon: '‚ùå', text: '–û—à–∏–±–∫–∞', color: 'text-accent-error' },
    processing: { icon: 'üîÑ', text: '–û–±—Ä–∞–±–æ—Ç–∫–∞...', color: 'text-accent-info' },
    completed: { icon: '‚úÖ', text: '–ì–æ—Ç–æ–≤–æ', color: 'text-accent-success' },
  };
  
  const config = statusConfig[status];
  
  return (
    <span className={clsx('flex items-center space-x-1', config.color)}>
      <span className={status === 'processing' ? 'animate-spin' : ''}>{config.icon}</span>
      <span>{config.text}</span>
    </span>
  );
};

// üéØ –≠–ö–°–ü–û–†–¢–´
export default ChatWindow;

// üìö –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–´–ï –≠–ö–°–ü–û–†–¢–´
export type { ChatWindowProps, MessageBubbleProps };

// üîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:
// TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É drag & drop –¥–ª—è —Ñ–∞–π–ª–æ–≤
// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å)
// TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É markdown —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
// TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
// FIXME: –î–æ–±–∞–≤–∏—Ç—å debouncing –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
// HACK: –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∏–∫–æ–Ω–∫–∏, –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ Lucide React