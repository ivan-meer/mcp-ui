name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  build_lint_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # You can specify a pnpm version

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Coverage
        run: pnpm coverage

      - name: Build libraries (excluding docs)
        run: pnpm --filter=!@mcp-ui/docs build

      - name: Build docs
        if: matrix.node-version == '20.x' # Build docs only on one Node version to save time
        run: pnpm --filter=@mcp-ui/docs build

  publish:
    needs: build_lint_test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      contents: read
      id-token: write # Required for publishing to NPM with OIDC
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm --filter=\"./packages/*\" --filter=\"@mcp-ui/docs\" build

      - name: Publish to NPM
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

# Optional: Deploy docs to GitHub Pages
#  deploy_docs:
#    needs: build_lint_test
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
#    permissions:
#      contents: read
#      pages: write
#      id-token: write
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 18.x
#          cache: 'npm'
#          cache-dependency-path: 'package-lock.json'
#      - name: Install dependencies
#        run: npm install --workspaces --frozen-lockfile
#      - name: Build documentation
#        run: npm run docs:build
#        env:
#          VITEPRESS_BASE: /${{ github.event.repository.name }}/ # Set base for GitHub Pages
#      - name: Setup Pages
#        uses: actions/configure-pages@v3
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v2
#        with:
#          path: apps/docs/src/.vitepress/dist
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v2 