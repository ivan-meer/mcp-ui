name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_lint_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Build libraries (excluding docs)
        run: pnpm --filter=!@mcp-ui/docs build

      - name: Build docs
        if: matrix.node-version == '20.x' # Build docs only on one Node version to save time
        run: pnpm --filter=@mcp-ui/docs build

  publish:
    needs: build_lint_test
    runs-on: ubuntu-latest
    # Run on pushes to the main branch. semantic-release will determine if a release is needed.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write # Needed to push new version tags, commit changelog/package.json updates
      issues: write   # Needed to create/comment on release-related issues (optional, but good practice)
      id-token: write # Required for publishing to NPM with OIDC
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches so semantic-release can analyze commits
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9 # Match pnpm version from build_lint_test job or your package.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x # Use a Node version compatible with semantic-release
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm --filter=\"./packages/*\" build
        
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by Actions, used by @semantic-release/github and @semantic-release/git
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}     # Your NPM token, used by @semantic-release/npm
        run: npx semantic-release